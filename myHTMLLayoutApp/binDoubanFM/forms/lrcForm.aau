/*
 **************************
 *
 * 豆瓣FM 桌面歌词窗口
 * 
 * by 武斌 http://wubin.in
 *
 **************************
 */
 
import win.ui;
import win.ui.menu;
import win.cur;
import sys.monitor;
import gdip;

var lrcForm = ..win.form( bottom=98;topmost=1;text="桌面歌词 - " ++ _app;border="none";right=900;exmode="toolwindow";title=false;mode="popup";top=-2 )
lrcForm.add(  );




//------------------------------------------------




UpdateLayeredWindow= ::User32.api("UpdateLayeredWindow","int(int hwnd,pointer pDCDst, struct pptDst, struct psize, 
		pointer pDCSrc, struct pptSrc, INT crKey, struct pblend, INT dwFlags)");
	
lrcForm.transparent(true);

function drawText(line1,line2) {

	var x,y,cx,cy = lrcForm.getPos();

	hdcTemp = ::GetDC(0);
	m_hdcMemory = ::CreateCompatibleDC(hdcTemp);
	hBitMap = ::CreateCompatibleBitmap(hdcTemp,cx,cy);
	::SelectObject(m_hdcMemory, hBitMap);
	::ReleaseDC(0, hdcTemp);
	
	//图形对象graphics（可以看作是画板）
 	var Graphics = gdip.graphics(m_hdcMemory);
 	
 	//加上抗锯齿功能
 	Graphics.smoothingMode = 4/*_GdipSmoothingModeAntiAlias*/ ; 

	//创建渐变刷子 
	var re ,Brush = gdip.CreateLineBrush (gdip.POINTF(10,0.5*lrcFontsize+6)/*渐变起始坐标*/
		, gdip.POINTF(10,lrcFontsize+22+0.35*lrcFontsize) /*渐变终止坐标*/ , "0xFF"++lrcFontcolor1/*起始颜色*/
		, "0xFF"++lrcFontcolor2/*结束颜色*/
		, 2/*_GdipWrapModeTileFlipY*/
		);

	//创建FontFamily
	try {
		if(string.find(line1,':')) family1 = gdip.family(cnFont); // 只要包含中文，就是用中文字体，暂不能两种字体混合显示
		else family1 = gdip.family(enFont); 
	}
	catch (e) {
		family1 = gdip.family( "simsun" );
		cnFont = "simsun";
		enFont = "simsun";
	}
	try {
		if(string.find(line2,':')) family2 = gdip.family(cnFont); // 只要包含中文，就是用中文字体，暂不能两种字体混合显示
		else family2 = gdip.family(enFont); 
	}
	catch (e) {
		family2 = gdip.family( "simsun" );
		cnFont = "simsun";
		enFont = "simsun"; 
	}
	
	//创建stringFormat 
	strformat = gdip.stringformat ( ); 
	//设置样式
	strformat.align = 1/*_GdipStringAlignmentNear*/;  

	 
	//设置文字区域
	rclayout = ::RECT( , ,cx,cy);
	rclayout2 = ::RECT(,lrcFontsize+16,cx,cy+lrcFontsize+16);
	//创建一个文字路径
	path = gdip.path(1/*_GdipFillModeAlternate*/ ); 

	//添加文字到上面创建的路径中
	var flag = false;
	try {
		path.addstringI( line1, family1, 1/*_GdipFontStyleBold*/, lrcFontsize, rclayout, strformat);
		path.addstringI( line2, family2, 1/*_GdipFontStyleBold*/, 0.7*lrcFontsize, rclayout2, strformat);	
 		flag = true;
 	}
 	if(!flag) return false;
 	/* ***********************************************
	 * GDI+中一般以I结尾的函数，参数使用int类型，而非I结尾的函数，参数使用float类型 
	 * 这里的rclayout就是普通的int类型参数组成的RECT结构体
	 * ***********************************************
	*/
	
；
	 
	//drawPath阴影、文字、描边
	// - 阴影，由外向内
	var re4,Pen5 = gdip.CreatePen1( 0x22444444,6,2/*_GdipUnitPixel*/);
	Graphics.drawPath( Pen5, path);
	var re4,Pen4 = gdip.CreatePen1( 0x33eeeeee,5,2/*_GdipUnitPixel*/);
	Graphics.drawPath( Pen4, path);
	var re4,Pen3 = gdip.CreatePen1( 0x44000000,4,2/*_GdipUnitPixel*/);
	Graphics.drawPath( Pen3, path);
	var re4,Pen2 = gdip.CreatePen1( 0x55000000,3,2/*_GdipUnitPixel*/);
	Graphics.drawPath( Pen2, path);	
	// - 填充文字
	Graphics.fillPath( Brush, path);
	// - 描边 - 内 - 模拟高光
	var re0,Pen0 = gdip.CreatePen1( 0xbbffffff,1,2/*_GdipUnitPixel*/);
	Graphics.drawPath( Pen0, path);
 
	//删除所有GDI+对象  
	gdip.DeleteBrush(Brush);
	gdip.DeletePen(Pen0);
	gdip.DeletePen(Pen2);
	gdip.DeletePen(Pen3);	
	gdip.DeletePen(Pen4);
	gdip.DeletePen(Pen5);
	//gdip.DeletePen(Pen);
	 
	strformat.delete();
	family1.delete();
	family2.delete();	
	path.delete(); 
	
		// 用这个GDI 画好的DC代替窗体原来的图形 
	ptWinPos = ::POINT(x,y);
	sizeWindow = ::POINT(cx,cy );
	ptSrc = ::POINT();
	
	var BLENDFUNCTION = class {
		BYTE BlendOp;
		BYTE BlendFlags;
		BYTE SourceConstantAlpha;
		BYTE AlphaFormat;
	}
	
	Blend=BLENDFUNCTION();
	Blend.SourceConstantAlpha = 255;
	Blend.AlphaFormat = 1;
	 
	bRet = UpdateLayeredWindow(lrcForm.hwnd, ,ptWinPos, sizeWindow, m_hdcMemory, ptSrc, 0, Blend, 0x00000002/*ULW_ALPHA*/);
	
	DeleteObject(hBitMap);
	DeleteDC(m_hdcMemory);
	
}//endproc

//------------------------------------------------

lrcForm.wndproc = {
	[0x201/*_WM_LBUTTONDOWN 鼠标按下*/] = function (hwnd, message, wParam, lParam) {
		lrcForm.hitCaption(); //移动窗体时
	}
	[0x204/*_WM_RBUTTONDOWN 鼠标右键*/] = function (hwnd, message, wParam, lParam) {
   		import mouse;
   		var x,y = mouse.getPos();
   		win.setForeground(mainForm.hwnd);
   		mainForm.popmenu.popup(x,y,true);	
	}
	[0x203/*_WM_LBUTTONDBLCLK 左键双击*/] = function (hwnd, message, wParam, lParam) {
		win.setForeground(mainForm.hwnd); 
	}
	[0x10/*_WM_CLOSE 窗口关闭消息*/] = function (hwnd, message, wParam, lParam) {
		lrcShowing = false; 
		lrcForm.show(false);
		return "noclose"; 
	}
	
}//endproc

// 设置鼠标样式
var hand = win.cur.load(0x7F86/*_IDC_HAND*/)；

lrcForm.wndproc = function(hwnd,message,wParam,lParam){
	if(message = 0x200/*_WM_MOUSEMOVE*/) { 
		win.cur.setCur(hand);
	} 
}

lrcForm.right = sys.monitor.getInfoFromWindow().rcWork.right;
lrcForm.left = 0;

//lrcForm.show();

win.loopMessage();

return lrcForm;
