//search 搜索音乐及艺术家
namespace binFM.search{
	import process;
	import inet.url;
	
	
	/*
	 * 百搜索音乐
	 */
	music = function(se="baidu",sid) {
		var title, artist;
		if(!sid) {
			var nowPlaying = ..binFM.song();
			if(nowPlaying) {
				title = nowPlaying["title"];
				artist = nowPlaying["artist"];
			}		
		}
		else {
			title = ..binFM.song(sid)["title"];
			artist = ..binFM.song(sid)["artist"];
		}
		if(title && title!="") {
			title,artist = ..binFM.string.doTitleArtist(title,artist);	
			if(se=="baidu") ..process.execute("http://music.baidu.com/search?key=" ++ title ++ " " ++ artist);
		}	
	}
	
	
	/*
	 * 搜索艺术家图片
	 */
	image = function(se="baidu",sid) {
		var title, artist;
		if(!sid) {
			var nowPlaying = ..binFM.song();
			if(nowPlaying) {
				title = nowPlaying["title"];
				artist = nowPlaying["artist"];
			}		
		}
		else {
			title = ..binFM.song(sid)["title"];
			artist = ..binFM.song(sid)["artist"];
		}
		if(title && title!="") {
			title,artist = ..binFM.string.doTitleArtist(title,artist);	
			if(se=="baidu") ..process.execute("http://image.baidu.com/i?tn=baiduimage&ipn=r&cl=2&lm=-1&st=-1&fm=result&fr=&sf=1&pv=&ic=0&nc=1&z=&se=1&showtab=1&fb=0&width=&height=&face=0&istype=2&ie=utf-8&word=" ++ ..inet.url.encode(..binFM.string.toUTF8(artist)));
		}	
	}
	
	
	/*
	 * 下载歌曲
	 */
	download = function(src="douban",sid) {
		var title,url;
		if(!sid) {
			var nowPlaying = ..binFM.song();
			if(nowPlaying) {
				title = nowPlaying["title"];
				if(src=="douban") url = nowPlaying["url"];
			}
		}
		else {
			title = ..binFM.song(sid)["title"];
			url = ..binFM.song(sid)["url"];
		}
		if(title && url) {
			..binFM.ui.showDownloads();
			..binFM.download.start(url,,title,".mp3");
		}
	}
	

	/*
	 * 搜索豆瓣音乐
	 * --page="pre"|"next"|""
	 */
	doubanMusic = function(keywords,page) {
		var pageNum,url,response,result,albumId,albumId_,artistId,start,temp;
		var albums = {};
		keywords = ..string.trim(keywords);
		if(page && page=="next") ..searchPageNum++;
		else if(page && page=="pre") {
			if(..searchPageNum==1) return;
			..searchPageNum--;
		}
		else ..searchPageNum = 1;
		if(..searchPageNum<1) ..searchPageNum = 1;
		start = (..searchPageNum-1) * 15;
				
		if(keywords && keywords!=""){
			if(!..noAPNG) {	
				//..win.delay(100);
				if(..binFM.ui.$("#searchResult")) ..binFM.ui.html("#searchResult",.._searchLoading);
				//..win.delay(100);
			}
			else {
				if(..binFM.ui.$("#searchResult")) ..binFM.ui.html("#searchResult",.._searchLoading2);
			}
			var searchResultHTML = '';
			// 搜索频道
			if(..searchPageNum==1) {
				url = "http://douban.fm/j/explore/search?query=" ++ ..inet.url.encode(..binFM.string.toUTF8(keywords)) ++ "&start=0&limit=20";
				response = ..binFM.invoke2(..binFM.wget,url);
				response = ..binFM.string.toGB2312(response);			
				if(response) {
					var json_tab = {};
					var channels = {};
					try {
						json_tab = ..web.json.parse(response);
					}
					if(json_tab) {
						channels = json_tab["data"]["channels"];
						if(channels) {
							//..binFM.monitor.info(..table.tostring(channels));
							temp = ..binFM.ui.searchResult(channels,"channel");
							if(temp) searchResultHTML ++= temp;
							temp = null;
						}
						json_tab = null;
					}
				}
				response = null;
			}
			// 搜索艺术家及专辑
			url = "http://music.douban.com/subject_search?start=" ++ start ++ "&search_text=" ++ ..inet.url.encode(..binFM.string.toUTF8(keywords));
			response = ..binFM.invoke2(..binFM.wget,url);
			response = ..binFM.string.toGB2312(response);
			if(response) {
				artistId = ..string.match(response,"http\:\/\/music\.douban\.com\/musician\/(\d+)\/");
				if(!artistId) artistId = "";
				..binFM.monitor.info("搜索到artist:"++artistId);
				var temp = /*<div class="content musician ">(.*?)<p class="ul first">*/
				var remove = ..string.match(response,temp);
				if(remove) response = ..string.replace(response,"@@"++remove,"");
				albumId_ = "";
				..binFM.db.dbBegin();
				var i = 1;
				for albumId in ..string.gmatch(response,"http\:\/\/music\.douban\.com\/subject\/(\d+)\/\?auto") {
					if(albumId_!=albumId) {
						..binFM.monitor.info("搜索到album:" ++ albumId);
						result = ..binFM.albumDetail(albumId);
						//..binFM.monitor.info(..table.tostring(result));
						albumId_ = albumId;
						if(result) {
							if(result["albumId"] && result["albumId"]!=-1) {
								if(!result["artistName"]) result["artistName"] = keywords;
								if(artistId && artistId!="" && i==1) {
									temp = ..binFM.ui.searchResult(,"artist",result["artistName"],artistId);
									if(temp) searchResultHTML ++= temp;
									temp = null;
								}
								albums[i] = result;
								..binFM.db.saveAlbum(result["albumId"],result["title"],result["brief"],result["photo"],artistId,result["artistName"])
								..binFM.monitor.info("搜索到专辑并加入数组"++tostring(i));
								if(..binFM.ui.$("#searchLoading")) ..binFM.ui.html("#searchLoading","已搜索到"++tostring(i)++"项");
								else if(..binFM.ui.$("#searchLoading2")) ..binFM.ui.html("#searchLoading2","已搜索到"++tostring(i)++"项");
								i++;
							}
						}
						else {
							..binFM.monitor.info("可能是API被封");
							if(i==1 && ..binFM.ui.$("#searchResult")) ..binFM.ui.html("#searchResult",'<div id="searchTip">可能是API被封...<br />请更换IP地址后重试</div>');
							..win.msgboxTimeout('可能豆瓣API被封，\r\n请更换IP地址后重试。',.._app,5000);
							break;
						}
					}
				}
				..binFM.db.dbCommit();
			}
			response = null;
			
			if(#albums) {
				temp = ..binFM.ui.searchResult(albums,"album");
				if(temp) searchResultHTML ++= temp;
				temp = null;
			}
			
			if(searchResultHTML=="") {
				..binFM.monitor.info("没有找到 "++keywords);
				searchResultHTML = .._searchNone;
			}
			searchResultHTML += ..binFM.ui.searchResult(,"page",,);
			if(..binFM.ui.$("#searchResult")) ..binFM.ui.html("#searchResult",searchResultHTML);
			
			searchResultHTML = null;
			collectgarbage("collect"); // 内存回收
			return;
		}
	}	
}
