//download 下载
namespace ..binFM.download{
	/*
 	 * 响应下载事件
 	 */
	import thread.command;
	import fsys;
	var command = ..thread.command(..downForm);
	
	command.onReciveBegin = function(filename,lable,statusCode,contentLength,fileSize){
		var itemId,rc,progressWidth;
		if(!..downForm) ..downForm = ..mainForm.loadForm("\forms\downForm.aau",..mainForm);
		itemId = ..downForm.listview.count;
		..downForm.listview.setItemText(..fsys.formatSize(contentLength + fileSize),itemId,2);
		..downForm.listview.setItemText(lable,itemId,4);		
		..totalSize_tab[itemId] = contentLength + fileSize;
		..filePath_tab[itemId] = filename;
   		rc = ..downForm.listview.getItemRect(itemId,3,,2);
		..downForm.listview["progress" ++ itemId].setRect(rc);
		if(..io.splitpath(filename).file=="doubanFM_lastest.exe") {
			..binFM.ui.html("#progress_text","准备下载",..wbLayout_update);
		}
		return itemId;
	}
	command.onRecive = function(filename,itemId,totalSize){ 
		var downloadedRate = ..math.round ( totalSize / ..totalSize_tab[itemId] * 100 );
		..downForm.listview["progress" ++ itemId].pos = downloadedRate;
		rc = ..downForm.listview.getItemRect(itemId,3,,2);
		if(..downForm.listview["progress" ++ itemId].getRect()!=rc) ..downForm.listview["progress" ++ itemId].setRect(rc);
		if(..io.splitpath(filename).file=="doubanFM_lastest.exe") {
			if(..binFM.ui.html("#progress_text",,..wbLayout_update)!=tostring(downloadedRate)++"%") {
				..binFM.ui.html("#progress_text",tostring(downloadedRate)++"%",..wbLayout_update);
				progressWidth = ..math.round(downloadedRate /100 * 346);
				..binFM.ui.css("#progress","width",tostring(progressWidth)++"px",..wbLayout_update);
			}	
		}
	}
	command.onReciveEnd = function(filename,itemId,ok,err,fileSize){  
		if(!..downForm) ..downForm = ..mainForm.loadForm("\forms\downForm.aau",..mainForm);
		..downForm.listview.setItemText( ok ? "已完成" : err,itemId,4); 
		if(ok) {
			..win.delay(800);
			..downForm.listview["progress"++itemId].show(false);
			..downForm.listview.setItemText("100%",itemId,3);
			if(..io.splitpath(filename).file=="doubanFM_lastest.exe") ..binFM.callUpdate();
		}
	}
	
	
	

	/* 
 	* 下载线程
 	*/
	import thread.works;
	var downloadTask = ..thread.works( 5/*个下载线程*/,
	
		function( option ) {
			
			import fsys;
			import inet.whttp;
			import inet.httpFile;
			import thread.command;
			import thread.event;
			
			var itemId;
			var total;
			var evt = ..thread.event("STOP ALL",true);//参数2为真避免线程自动切换信号
			
			var remoteFile = ..inet.httpFile( option.url , option.filename ) ;
			
			remoteFile.onReciveBegin = function(statusCode,contentLength,fileSize){
				if( statusCode == 206/*断点续传*/ ){ 
					itemId = ..thread.command.send( "onReciveBegin",option.filename,"断点续传",statusCode,contentLength,fileSize);
				}
				elseif(fileSize){ 
					itemId = ..thread.command.send( "onReciveBegin",option.filename,"重新下载",statusCode,contentLength,fileSize);
				}
				else {
					itemId = ..thread.command.send( "onReciveBegin",option.filename,"正在下载",statusCode,contentLength,fileSize);
				}  
				total = fileSize;
			}
			
			remoteFile.onRecive = function(str,size,contentLength){ 
				total = total + size;
				..thread.command.send( "onRecive",option.filename,itemId,total );
				return ! evt.waitOne(1) /*检测主线程是否发出停止信号*/;
			}
		 	
			var ok,err,fileSize = remoteFile.download() 
			if(ok && err && !itemId ){
				itemId = ..thread.command.send( "onReciveBegin",option.filename,"下载完成",0,0,fileSize);
			}
			if(ok) {
				..fsys.delete(option.filename++'.dow!oad');
				if(option.url!=option.update) {
					import win.util.tray;
					..win.util.tray.pop("[ " ++ ..io.splitpath(option.filename).name ++ " ] 下载完成！");
				}
			}
			..thread.command.send( "onReciveEnd",option.filename,itemId,ok,err,option.filename,fileSize );
		} 
	);
	
	
	
	
	/*
 	 * 准备开始下载文件
 	 */
	start = function(fileUrl,savePath,name,extension){
		if(!..downForm) ..downForm = ..mainForm.loadForm("\forms\downForm.aau",..mainForm);
		if(extension && extension==".mp3") {
			if(name) name = ..binFM.string.doTitleArtist(name, "");
			if(!name || (name && ..string.trim(name)=="")) name = "豆瓣好音乐";
		}
		else if(!extension) extension = "";
		
		if(!savePath || (savePath && savePath=="")) {
			savePath = ..saveFolder ++ "\" ++ name ++ extension;
			if(!..downForm.checkDefaultFolder.checked) {
				savePath = ..fsys.dlg.save(,"保存文件",..saveFolder,,,name ++ extension);
				if(savePath != null) {
					..saveFolder = ..io.splitpath(savePath).dir;
					..downForm.displayFolder.text = ..saveFolder;
					..binFM.db.set("saveFolder",..saveFolder);
					..downForm.checkDefaultFolder.checked = true;
				}
				else {
					return;
				}
			}
			savePath = ..string.replace(savePath,"@@\\","\");
		}
		else {
			name = ..io.splitpath(savePath).name;
			extension = ..io.splitpath(savePath).ext;
		}
		
		// 遍历存储下载中文件名的数组，若已在下载，则返回
		if(!..totalSize_tab) ..totalSize_tab = {}; // 存放文件大小的数组
		if(!..filePath_tab) ..filePath_tab = {}; // 存放完整的下载后的文件路径及文件名
		var k,v;
		for k,v in ..filePath_tab  { 
			if(v==savePath) return; 
		};

		if(!..downForm) ..downForm = ..mainForm.loadForm("\forms\downForm.aau",..mainForm);
		..downForm.listview.addItem( { 
			name++extension;
			"";
			"";
			"准备下载";
		});		
		
		..addProgress(); // 在downForm.aau中，若代码写在此处，则运行通过，编译后报错

		try {
			downloadTask.push( url = fileUrl; filename=savePath;update=.._update);
		}
		if(extension==".mp3") ..binFM.lrc.save("file",savePath,"notOpen",name);
	}
	
	
	
	
	/*
 	* 停止所有下载
 	*/
	stop = function() {
		import thread.event;
		if(!..downForm) ..downForm = ..mainForm.loadForm("\forms\downForm.aau",..mainForm);
		if(..downForm) ..downForm.text = "正在关闭..."; 
		..thread.event("STOP ALL",true).set(); /*发出停止信号*/
		downloadTask.waitClose();
  	}


	/*
	 * 后台下载文件
	 */
	single = function(url,saveFile) {
		import inet.whttp;
		import inet.httpFile;
		
		var ok,err,fileSize = ..inet.httpFile(url,saveFile).download();
		if(ok) {
			try {
				..io.remove(saveFile ++ ".dow!oad");
			}
			return ok;
		}	
	}
}
